[{"/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/index.js":"1","/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/App.js":"2","/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/reportWebVitals.js":"3","/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/Person/Person.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":3908,"mtime":1609360269330,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":807,"mtime":1609361472235,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"16yrx6u",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/index.js",[],["20","21"],"/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/App.js",["22","23","24"],"import './App.css';\nimport Person from './Person/Person'\nimport { useState, Component, useEffect } from 'react'\nimport { render } from 'react-dom';\n\n\n//  Function component using hooks\nfunction App() {\n  const [people, setPeople] = useState([\n    { id: '1', name: \"Adam\", age:\"32\", job:\"programmer\" }, \n    { id: '2', name:\"Eric\", age:\"30\", job:\"entrepeneur\" }, \n    { id: '3', name:\"Joey\", age:\"28\", job:\"marketing director\" }])\n  \n  const [showPerson, setShowPerson] = useState(false)  \n\n\n    const nameChangedHandler = (event, id) => {\n        //  the personIndex is the one whose id matches the id from the event\n        const personIndex = people.findIndex(p => {\n          return p.id === id;\n        });\n\n        //  create a new object and use the spread operator to avoid mutating original\n        const person = {\n          ...people[personIndex]\n        };\n\n        //  the updated name comes from the input event\n        person.name = event.target.value;\n\n        //  make a copy of the array and update it at the targeted index\n        const persons = [...people];\n        persons[personIndex] = person;\n\n        //  set the state to include the updated array\n        setPeople(persons)\n    }\n\n    const togglePersonHandler = () => {\n        setShowPerson(!showPerson)\n    }\n\n    const deletePersonHandler = (personIndex) => {\n      const persons = [...people];\n      persons.splice(personIndex, 1);\n      setPeople(persons)\n    }\n\n    const style = {\n      backgroundColor: 'green',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    }\n\n  let persons = null;\n\n  if (showPerson) {\n    persons = (\n      <div>\n        {people.map((person, index) => {\n          return <Person\n            key={person.id} \n            name={person.name} \n            age={person.age}\n            job={person.job}\n            click={() => deletePersonHandler(index)}\n            changed={(event) => nameChangedHandler(event, person.id)}\n            />\n        })}\n      </div>\n    )\n    //  Dynamic stylng for the button within the conditional\n    style.backgroundColor = 'red';\n    style[':hover']= {\n      backgroundColor: 'salmon'\n    }\n  }\n\n  const classes = [];\n  if (people.length <= 2) {\n    classes.push('red')\n  }\n  if (people.length <= 1) {\n    classes.push('bold')\n  }\n\nreturn (\n  <div className=\"App\">\n    <button style={style} onClick={() => togglePersonHandler()}>{showPerson ? 'Hide' : 'Show'}</button> \n    <p className={classes.join(' ')}>List of people below</p>\n     {persons}\n  </div>\n);\n}\n\n//  Class component \n// class App extends Component {\n//   state = {\n//     person:\n//     [\n//       {name: \"Adam\", age:\"32\", job:\"programmer\"}, \n//       {name:\"Eric\", age:\"30\", job:\"entrepeneur\"}, \n//       {name:\"Joey\", age:\"28\", job:\"marketing director\"}\n//     ]\n//   }\n\n//   switchNameHandler = () => {\n//     // console.log('was clicked')\n//     this.setState({person: [\n//       {name: \"Mada\", age:\"32\", job:\"programmer\"}, \n//       {name:\"Cire\", age:\"30\", job:\"entrepeneur\"}, \n//       {name:\"Yeoj\", age:\"28\", job:\"marketing director\"}\n//     ] })\n//   }\n\n//   render() {\n\n      // const style = {\n      //   backgroundColor: 'red',\n      //   border: '1px solid blue',\n      //   padding: '8px',\n      //   cursor: 'pointer'\n      // }\n//     return (\n//     <div className=\"App\">\n//       <button style={style} onClick={this.switchNameHandler}>Switch Name</button>\n//       <Person name={this.state.person[0].name} age={this.state.person[0].age} job={this.state.person[0].job}></Person>\n//       <Person name={this.state.person[1].name} age={this.state.person[1].age} job={this.state.person[1].job} />\n//       <Person name={this.state.person[2].name} age={this.state.person[2].age} job={this.state.person[2].job} />\n//     </div>\n//   );\n//   }\n// }\n\nexport default App;\n","/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/reportWebVitals.js",[],"/Users/adamrturman/Desktop/coding/react-tutorial/react-complete-guide/src/Person/Person.js",["25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":3,"column":20,"nodeType":"32","messageId":"33","endLine":3,"endColumn":29},{"ruleId":"30","severity":1,"message":"34","line":3,"column":31,"nodeType":"32","messageId":"33","endLine":3,"endColumn":40},{"ruleId":"30","severity":1,"message":"35","line":4,"column":10,"nodeType":"32","messageId":"33","endLine":4,"endColumn":16},{"ruleId":"30","severity":1,"message":"35","line":3,"column":10,"nodeType":"32","messageId":"33","endLine":3,"endColumn":16},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]